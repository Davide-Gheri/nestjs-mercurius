# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User implements Person {
  id: ID!
  name: String
  uniqueName: String!
  uniqueId: String!
  lastName: String!
  birthDay: DateTime!
  secret: Hash
  meta: JSON
  age: Int!
  fullName(filter: String): String
  posts: [PostType!]!
}

interface Person {
  id: ID!
  name: String
  uniqueName: String!
  uniqueId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Hash scalar"""
scalar Hash

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type PostType {
  id: ID!
  title: String!
  authorId: String!
  status: Status!
}

enum Status {
  PUBLISHED
  DRAFT
}

type Query {
  users: [User!]!
  user(id: ID!): User
  search: [SearchUnion!]!
}

union SearchUnion = PostType | User

type Mutation {
  uploadImage(file: Upload!): Boolean!
  createUser(input: CreateUserInput!): User!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateUserInput {
  name: String
  lastName: String = "noone"
  birthDay: DateTime!
  secret: Hash
  meta: JSON
}

type Subscription {
  userAdded: User!
  userAddedId: String!
  specificUserAdded(id: ID!): User!
}
